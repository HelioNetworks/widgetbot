# This file was generated. Do not edit manually.

schema {
  query: Query
}

type Attachment {
  height: String
  url: String
  width: String
}

type Author {
  avatar: String
  color: String!
  id: String!
  name: String
  roles: [Role]
  type: String!
}

type Cache {
  "Total amount of cached channels"
  totalChannels: Int!
  "Total amount of cached messages"
  totalMessages: Int!
  "Total amount of cached servers"
  totalServers: Int!
}

type Channel {
  "Fetches messages from the channel"
  messages: [Message]
  "The channel name"
  name: String!
  "The permissions the guest has on the channel"
  permissions: [String]
  "The channel topic"
  topic: String
}

type ChannelMention {
  id: String!
  name: String!
}

type Channels {
  "The channel category"
  category: String
  "The channel ID"
  id: String!
  "The channel name"
  name: String!
  "The permissions the guest has on the channel"
  permissions: [String]!
  "Type of text channel"
  type: String
}

type Colors {
  accent: String!
  background: String!
  primary: String!
}

type Embed {
  author: EmbedAuthor
  color: Int
  description: String
  fields: [EmbedField]
  footer: EmbedFooter
  image: EmbedImage
  provider: EmbedProvider
  thumbnail: EmbedThumbnail
  timestamp: String
  title: String
  "Left for legacy purposes, do not use!"
  type: String!
  url: String
  video: EmbedVideo
}

type EmbedAuthor {
  iconURL: String
  name: String
  url: String
}

type EmbedField {
  inline: Boolean
  name: String
  value: String
}

type EmbedFooter {
  iconURL: String
  proxyIconUrl: String
  text: String
}

type EmbedImage {
  height: Int
  proxyURL: String
  url: String
  width: Int
}

type EmbedProvider {
  name: String
  url: String
}

type EmbedThumbnail {
  height: Int
  proxyURL: String
  url: String
  width: Int
}

type EmbedVideo {
  height: Int
  url: String
  width: Int
}

type Member {
  "Member's avatar"
  avatar: String
  "Member's final role color"
  color: String!
  "Member's ID"
  id: String!
  name: String!
  "Member's roles"
  roles: [Role]
  "Member's type: member, bot, guest"
  type: String!
}

type MemberMention {
  avatar: String
  id: String!
  name: String!
  roles: [Role]
}

type Mentions {
  channels: [ChannelMention]
  everyone: Boolean!
  members: [MemberMention]
  roles: [RoleMention]
}

type Message {
  "Message attachments"
  attachment: Attachment
  "Message author"
  author: Author
  "Message contents"
  content: String
  "Time of edit"
  editedAt: Float
  "Message embeds"
  embeds: [Embed]
  "Message ID"
  id: String!
  "Message mentions"
  mentions: Mentions
  "Message reactions"
  reactions: [Reaction]
  "Message timestamp"
  timestamp: Float!
  "Message type"
  type: String!
}

type Query {
  "Bot invite URL"
  invite: String!
  "The discord server to query"
  server(id: String): Server
  "Bot statistics"
  stats: Stats
}

type Reaction {
  count: Int
  id: String
  name: String
}

type Role {
  color: String!
  name: String!
  position: Int!
}

type RoleMention {
  color: String!
  id: String!
  name: String!
}

type Server {
  "Query a channel"
  channel(id: String): Channel
  "Fetches all the channels on the server"
  channels: [Channels]
  "The servers icon"
  icon: String!
  "Discord invite for the server"
  invite: String
  "Amount of members in the server"
  memberCount: Int!
  "The name of the server"
  name: String!
  "Theme for the server"
  theme: Theme
}

type Stats {
  "Stats for the in-memory cache engine"
  cache: Cache
  "Total amount of online guests (socket.io count)"
  onlineGuests: Int!
  "Total amount of guests that have sent messages"
  totalGuests: Int
  "Total amount of members across all the servers the bot is in"
  totalMembers: Int
  "Total amount of messages all guests have sent"
  totalMessages: Int
  "Total amount of servers the bot is in"
  totalServers: Int
}

type Theme {
  colors: Colors
  css: String
}
